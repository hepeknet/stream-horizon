<!--
Assuming that your current deployment has INSERT_ONLY type dimeension (as given in Sales Demo) you can simply test 
T1 dimension by making following changes:

Process for creating T1 dimension from INSERT_ONLY dimension (as it is given in Sales Demo):

1) If you have altered data model from how it was shipped with Sales Demo please re-run database scipt as it is given in Sales Demo (alternatively just undo changes you have made).
2) Execute database script as given below (note, two versions are available, Oracle and MSSQL). 
3) Change engine-config.xml for pdoduct_dim as given below (note, two versions are available, Oracle and MSSQL)
4) Run StreamHorizon


NOTES:

1)
You can run test data which comes with Sales Demo as a test of T1 functionality, however this test isn't realistic. Reason being is that
Sales Demo loads same file over and over again. In every file natural key will be changed thousands of times. This is never the case in real
life scenario. As a consequence, if you test with Sales Demo StreamHorizon sample data throughput will be unrealistically small due to enormous number of update statements.

2)
Above changes simply re-define natural key of product_dim. Natural key in this example is only the "productModel" attribute.
In previous example (INSERT_ONLY dimension type natural key was made of three attributes  "productName + productModel + productCategory").

3)
Pre-caching for T1 dimension (<preCacheRecords> tag) is not supported. If supplied, it will be ignored.
-->	

<!--
--------------------------------------------------------------------------------------------------------
----------------------------------------- Oracle scripts -----------------------------------------------
--------------------------------------------------------------------------------------------------------



Oracle product_dim database script for T1:

TRUNCATE TABLE sales_fact;
TRUNCATE TABLE product_dim;
DROP INDEX nk_product;
CREATE UNIQUE INDEX nk_product ON product_dim (product_model);



Oracle product_dim configuration for T1:
-->
		<dimension name="product_dim" type="T1" exposeLastLineValueInContext="false" cachePerThreadEnabled="true">
			<localCacheMaxSize>10000</localCacheMaxSize>
			<mappedColumns>
				<mappedColumn name="productName" naturalKey="false" />
				<mappedColumn name="productModel" naturalKey="true" />
				<mappedColumn name="productCategory" naturalKey="false" />
				<mappedColumn name="productCost" naturalKey="false" />    
			</mappedColumns>
			<sqlStatements>
				<insertSingleRecord>insert into product_dim(product_id, product_name, product_model, product_category, product_cost) values (product_dim_seq.nextval, '${productName}', '${productModel}', '${productCategory}','${productCost}')</insertSingleRecord>
				<updateSingleRecord>update product_dim set product_name='${productName}', product_category='${productCategory}', product_cost='${productCost}' where product_model='${productModel}' </updateSingleRecord>
				<selectRecordIdentifier>select product_id from product_dim where product_model='${productModel}' </selectRecordIdentifier>
			</sqlStatements>
		</dimension>

		
		
		
<!--
--------------------------------------------------------------------------------------------------------
------------------------------------------ MSSQL scripts -----------------------------------------------
--------------------------------------------------------------------------------------------------------


MSSQL product_dim database script for T1:

USE sh;
GO
ALTER TABLE dbo.sales_fact DROP CONSTRAINT product_fk;
ALTER TABLE dbo.product_dim DROP CONSTRAINT nk_product;
GO
TRUNCATE TABLE sh.dbo.sales_fact;
TRUNCATE TABLE sh.dbo.product_dim;
GO
ALTER TABLE dbo.product_dim ADD CONSTRAINT nk_product UNIQUE (product_model);
ALTER TABLE dbo.sales_fact  WITH CHECK ADD  CONSTRAINT product_fk FOREIGN KEY([product_id]) REFERENCES dbo.product_dim (product_id)
GO



MSSQL product_dim configuration for T1:
-->		
		<dimension name="product_dim" type="T1" exposeLastLineValueInContext="false" cachePerThreadEnabled="true">
			<localCacheMaxSize>10000</localCacheMaxSize>
			<mappedColumns>
				<mappedColumn name="productName" naturalKey="false" />
				<mappedColumn name="productModel" naturalKey="true" />
				<mappedColumn name="productCategory" naturalKey="false" />
				<mappedColumn name="productCost" naturalKey="false" />    
			</mappedColumns>
			<sqlStatements>
				<insertSingleRecord>insert into product_dim(product_name, product_model, product_category, product_cost) values ('${productName}', '${productModel}', '${productCategory}','${productCost}')</insertSingleRecord>
				<updateSingleRecord>update product_dim set product_name='${productName}', product_category='${productCategory}', product_cost='${productCost}' where product_model='${productModel}' </updateSingleRecord>
				<selectRecordIdentifier>select product_id from product_dim where product_model='${productModel}' </selectRecordIdentifier>
				<preCacheRecords>select product_id, product_name, product_model, product_category, product_cost from product_dim</preCacheRecords>				
			</sqlStatements>
		</dimension>
	